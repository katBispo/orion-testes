{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/src/pages/SoftSensorPageAtual.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/SoftSensorPageAtual.css\";\n// YYYY-MM-DD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = date => {\n  const d = new Date(date);\n  const day = String(d.getDate()).padStart(2, \"0\");\n  const month = String(d.getMonth() + 1).padStart(2, \"0\");\n  const year = d.getFullYear();\n  return `${year}-${month}-${day}`;\n};\nconst SoftSensorPageAtual = () => {\n  _s();\n  const {\n    sensorId\n  } = useParams();\n  const [sensorData, setSensorData] = useState(null);\n  const [rainfallData, setRainfallData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [offset, setOffset] = useState(0);\n  const [hasMoreData, setHasMoreData] = useState(true);\n  useEffect(() => {\n    const fetchRainfallData = async () => {\n      try {\n        var _response$data;\n        const token = localStorage.getItem(\"token\");\n        const endDate = new Date();\n        const startDate = new Date(endDate);\n        startDate.setDate(endDate.getDate() - 1);\n\n        // Função para formatar a data no formato YYYY-MM-DD\n        const formatDate = date => {\n          const year = date.getFullYear();\n          const month = String(date.getMonth() + 1).padStart(2, '0');\n          const day = String(date.getDate()).padStart(2, '0');\n          return `${year}-${month}-${day}`;\n        };\n        const formattedStartDate = formatDate(startDate);\n        const formattedEndDate = formatDate(endDate);\n        const response = await axios.get(`http://localhost:3001/get-info-sensor?startDate=${formattedStartDate}&endDate=${formattedEndDate}&offset=${offset}&softSensorId=${sensorId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Resposta completa da API:\", response.data);\n        const newData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n        if (newData.length > 0) {\n          setRainfallData(prevData => [...prevData, ...newData]);\n          setOffset(prevOffset => prevOffset + 1);\n        } else {\n          setHasMoreData(false);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Erro na requisição:\", err);\n        setError(\"Erro ao carregar dados de rainfall.\");\n        setLoading(false);\n      }\n    };\n    if (hasMoreData) {\n      fetchRainfallData();\n    }\n  }, [sensorId, offset, hasMoreData]); // Dependências para refazer a requisição\n\n  const handleLoadMore = () => {\n    if (hasMoreData) {\n      setOffset(offset + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Detalhes do Sensor \", sensorId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-card\",\n      children: rainfallData.length > 0 ? rainfallData.map((dataItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 32\n          }, this), \" \", dataItem.readingDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 32\n          }, this), \" \", dataItem.sensorValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Unidade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }, this), \" \", dataItem.uom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum dado encontrado para este sensor.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), hasMoreData && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: handleLoadMore,\n      children: \"Carregar Mais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(SoftSensorPageAtual, \"m1GZNoMVQu1c6PzYAGiCNIJiTns=\", false, function () {\n  return [useParams];\n});\n_c = SoftSensorPageAtual;\nexport default SoftSensorPageAtual;\nvar _c;\n$RefreshReg$(_c, \"SoftSensorPageAtual\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","formatDate","date","d","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","SoftSensorPageAtual","_s","sensorId","sensorData","setSensorData","rainfallData","setRainfallData","loading","setLoading","error","setError","offset","setOffset","hasMoreData","setHasMoreData","fetchRainfallData","_response$data","token","localStorage","getItem","endDate","startDate","setDate","formattedStartDate","formattedEndDate","response","get","headers","Authorization","console","log","data","newData","length","prevData","prevOffset","err","handleLoadMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dataItem","index","readingDate","sensorValue","uom","onClick","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/src/pages/SoftSensorPageAtual.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/SoftSensorPageAtual.css\"\n// YYYY-MM-DD\nconst formatDate = (date) => {\n    const d = new Date(date);\n    const day = String(d.getDate()).padStart(2, \"0\");\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\n    const year = d.getFullYear();\n    return `${year}-${month}-${day}`;\n};\n\nconst SoftSensorPageAtual = () => {\n    const { sensorId } = useParams();\n    const [sensorData, setSensorData] = useState(null);\n\n    const [rainfallData, setRainfallData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [offset, setOffset] = useState(0);\n    const [hasMoreData, setHasMoreData] = useState(true);\n\n    useEffect(() => {\n        const fetchRainfallData = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n\n                const endDate = new Date();\n                const startDate = new Date(endDate);\n                startDate.setDate(endDate.getDate() - 1);\n\n                // Função para formatar a data no formato YYYY-MM-DD\n                const formatDate = (date) => {\n                    const year = date.getFullYear();\n                    const month = String(date.getMonth() + 1).padStart(2, '0');\n                    const day = String(date.getDate()).padStart(2, '0');\n                    return `${year}-${month}-${day}`;\n                };\n\n                const formattedStartDate = formatDate(startDate);\n                const formattedEndDate = formatDate(endDate);\n\n                const response = await axios.get(\n                    `http://localhost:3001/get-info-sensor?startDate=${formattedStartDate}&endDate=${formattedEndDate}&offset=${offset}&softSensorId=${sensorId}`,\n                    {\n                        headers: { Authorization: `Bearer ${token}` },\n                    }\n                );\n\n                console.log(\"Resposta completa da API:\", response.data);\n\n                const newData = response.data?.data || [];\n\n                if (newData.length > 0) {\n                    setRainfallData((prevData) => [...prevData, ...newData]);\n                    setOffset((prevOffset) => prevOffset + 1);\n                } else {\n                    setHasMoreData(false);\n                }\n\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Erro na requisição:\", err);\n                setError(\"Erro ao carregar dados de rainfall.\");\n                setLoading(false);\n            }\n        };\n\n        if (hasMoreData) {\n            fetchRainfallData();\n        }\n    }, [sensorId, offset, hasMoreData]); // Dependências para refazer a requisição\n\n    const handleLoadMore = () => {\n        if (hasMoreData) {\n            setOffset(offset + 1);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Detalhes do Sensor {sensorId}</h1>\n            {loading && <p>Carregando...</p>}\n            {error && <p>{error}</p>}\n\n            <div className=\"data-card\">\n                {rainfallData.length > 0 ? (\n                    rainfallData.map((dataItem, index) => (\n                        <div key={index} className=\"data-card\">\n                            <p><strong>Data:</strong> {dataItem.readingDate}</p>\n                            <p><strong>Valor:</strong> {dataItem.sensorValue}</p>\n\n                            <p><strong>Unidade:</strong> {dataItem.uom}</p>\n                        </div>\n                    ))\n                ) : (\n                    !loading && <p>Nenhum dado encontrado para este sensor.</p>\n                )}\n            </div>\n\n            {hasMoreData && (\n                <button className=\"btn-load-more\" onClick={handleLoadMore}>\n                    Carregar Mais\n                </button>\n            )}\n\n\n        </div>\n    );\n};\n\nexport default SoftSensorPageAtual;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,gCAAgC;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;EACzB,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EACxB,MAAMG,GAAG,GAAGC,MAAM,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChD,MAAMC,KAAK,GAAGH,MAAM,CAACH,CAAC,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACvD,MAAMG,IAAI,GAAGR,CAAC,CAACS,WAAW,CAAC,CAAC;EAC5B,OAAO,GAAGD,IAAI,IAAIF,KAAK,IAAIJ,GAAG,EAAE;AACpC,CAAC;AAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAS,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAChC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMgC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QAAA,IAAAC,cAAA;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,MAAMC,OAAO,GAAG,IAAI7B,IAAI,CAAC,CAAC;QAC1B,MAAM8B,SAAS,GAAG,IAAI9B,IAAI,CAAC6B,OAAO,CAAC;QACnCC,SAAS,CAACC,OAAO,CAACF,OAAO,CAAC1B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;QAExC;QACA,MAAMN,UAAU,GAAIC,IAAI,IAAK;UACzB,MAAMS,IAAI,GAAGT,IAAI,CAACU,WAAW,CAAC,CAAC;UAC/B,MAAMH,KAAK,GAAGH,MAAM,CAACJ,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UAC1D,MAAMH,GAAG,GAAGC,MAAM,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UACnD,OAAO,GAAGG,IAAI,IAAIF,KAAK,IAAIJ,GAAG,EAAE;QACpC,CAAC;QAED,MAAM+B,kBAAkB,GAAGnC,UAAU,CAACiC,SAAS,CAAC;QAChD,MAAMG,gBAAgB,GAAGpC,UAAU,CAACgC,OAAO,CAAC;QAE5C,MAAMK,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAC5B,mDAAmDH,kBAAkB,YAAYC,gBAAgB,WAAWb,MAAM,iBAAiBT,QAAQ,EAAE,EAC7I;UACIyB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAChD,CACJ,CAAC;QAEDY,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEL,QAAQ,CAACM,IAAI,CAAC;QAEvD,MAAMC,OAAO,GAAG,EAAAhB,cAAA,GAAAS,QAAQ,CAACM,IAAI,cAAAf,cAAA,uBAAbA,cAAA,CAAee,IAAI,KAAI,EAAE;QAEzC,IAAIC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UACpB3B,eAAe,CAAE4B,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGF,OAAO,CAAC,CAAC;UACxDpB,SAAS,CAAEuB,UAAU,IAAKA,UAAU,GAAG,CAAC,CAAC;QAC7C,CAAC,MAAM;UACHrB,cAAc,CAAC,KAAK,CAAC;QACzB;QAEAN,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAO4B,GAAG,EAAE;QACVP,OAAO,CAACpB,KAAK,CAAC,qBAAqB,EAAE2B,GAAG,CAAC;QACzC1B,QAAQ,CAAC,qCAAqC,CAAC;QAC/CF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED,IAAIK,WAAW,EAAE;MACbE,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC,EAAE,CAACb,QAAQ,EAAES,MAAM,EAAEE,WAAW,CAAC,CAAC,CAAC,CAAC;;EAErC,MAAMwB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIxB,WAAW,EAAE;MACbD,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAKmD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpD,OAAA;MAAAoD,QAAA,GAAI,qBAAmB,EAACrC,QAAQ;IAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrCpC,OAAO,iBAAIpB,OAAA;MAAAoD,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC/BlC,KAAK,iBAAItB,OAAA;MAAAoD,QAAA,EAAI9B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBxD,OAAA;MAAKmD,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBlC,YAAY,CAAC4B,MAAM,GAAG,CAAC,GACpB5B,YAAY,CAACuC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B3D,OAAA;QAAiBmD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAClCpD,OAAA;UAAAoD,QAAA,gBAAGpD,OAAA;YAAAoD,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,QAAQ,CAACE,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDxD,OAAA;UAAAoD,QAAA,gBAAGpD,OAAA;YAAAoD,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,QAAQ,CAACG,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAErDxD,OAAA;UAAAoD,QAAA,gBAAGpD,OAAA;YAAAoD,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,QAAQ,CAACI,GAAG;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJzCG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACR,CAAC,GAEF,CAACpC,OAAO,iBAAIpB,OAAA;QAAAoD,QAAA,EAAG;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEL9B,WAAW,iBACR1B,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACY,OAAO,EAAEb,cAAe;MAAAE,QAAA,EAAC;IAE3D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAEd,CAAC;AAAC1C,EAAA,CAjGID,mBAAmB;EAAA,QACAf,SAAS;AAAA;AAAAkE,EAAA,GAD5BnD,mBAAmB;AAmGzB,eAAeA,mBAAmB;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}