{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/src/pages/ListDevicesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport \"./a.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListDevicesPage = () => {\n  _s();\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/list-all-devices\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Resposta completa da API:\", response.data);\n      if (!response.data || !response.data.body || !response.data.body.data) {\n        console.error(\"Dados inválidos recebidos:\", response.data);\n        setError(\"Dados inválidos recebidos da API\");\n        setLoading(false);\n        return;\n      }\n      const devicesList = Object.values(response.data.body.data);\n      setDevices(devicesList);\n      setLoading(false);\n    } catch (error) {\n      setError(\"Erro ao carregar dispositivos\");\n      setLoading(false);\n      console.error(\"Erro na requisição:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  const handleViewMore = serialNumber => {\n    // Redirecionar para a página ListRainfall, passando o serialNumber como parâmetro na URL\n    navigate(`/list-rainfall/${serialNumber}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"devices-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando dispositivos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", device.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xDAltima atualiza\\xE7\\xE3o: \", new Date(device.lastUpdate).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewMore(device.serialNumber),\n        id: device.serialNumber,\n        children: \"Ver Mais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, device.serialNumber, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ListDevicesPage, \"Txi27aUZPannBaUHtcNkHkEGdBk=\", false, function () {\n  return [useNavigate];\n});\n_c = ListDevicesPage;\nexport default ListDevicesPage;\nvar _c;\n$RefreshReg$(_c, \"ListDevicesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","useNavigate","FaCheckCircle","FaTimesCircle","jsxDEV","_jsxDEV","ListDevicesPage","_s","token","localStorage","getItem","devices","setDevices","loading","setLoading","error","setError","navigate","fetchDevices","response","get","headers","Authorization","console","log","data","body","devicesList","Object","values","handleViewMore","serialNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","device","name","status","Date","lastUpdate","toLocaleString","onClick","id","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/src/pages/ListDevicesPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport \"./a.css\";\n\nconst ListDevicesPage = () => {\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/list-all-devices\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      console.log(\"Resposta completa da API:\", response.data);\n\n      if (!response.data || !response.data.body || !response.data.body.data) {\n        console.error(\"Dados inválidos recebidos:\", response.data);\n        setError(\"Dados inválidos recebidos da API\");\n        setLoading(false);\n        return;\n      }\n\n      const devicesList = Object.values(response.data.body.data);\n      setDevices(devicesList);\n      setLoading(false);\n    } catch (error) {\n      setError(\"Erro ao carregar dispositivos\");\n      setLoading(false);\n      console.error(\"Erro na requisição:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n\n\n \n  const handleViewMore = (serialNumber) => {\n    // Redirecionar para a página ListRainfall, passando o serialNumber como parâmetro na URL\n    navigate(`/list-rainfall/${serialNumber}`);\n  };\n\n  return (\n    <div className=\"devices-container\">\n      <h2>Lista de Dispositivos</h2>\n      {loading ? (\n        <p>Carregando dispositivos...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        devices.map((device) => (\n          <div key={device.serialNumber} className=\"device-card\">\n            <h3>{device.name}</h3>\n            <p>Status: {device.status}</p>\n            <p>Última atualização: {new Date(device.lastUpdate).toLocaleString()}</p>\n\n            {/* Botão \"Ver Mais\" para cada dispositivo */}\n            <button\n              onClick={() => handleViewMore(device.serialNumber)}\n              id={device.serialNumber}\n            >\n              Ver Mais\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ListDevicesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}