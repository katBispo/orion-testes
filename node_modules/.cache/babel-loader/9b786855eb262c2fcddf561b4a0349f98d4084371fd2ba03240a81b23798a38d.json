{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/src/pages/SoftSensorPageAtual.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/SoftSensorPageAtual.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = date => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst SoftSensorPageAtual = () => {\n  _s();\n  const {\n    sensorId\n  } = useParams(); // ID do sensor principal\n  const [softSensorData, setSoftSensorData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [offset, setOffset] = useState(0);\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const isFetching = useRef(false);\n  useEffect(() => {\n    const fetchSoftSensorData = async () => {\n      if (isFetching.current || !hasMoreData) return;\n      isFetching.current = true;\n      try {\n        var _response$data;\n        const token = localStorage.getItem(\"token\");\n        const endDate = new Date();\n        const startDate = new Date(endDate);\n        startDate.setDate(endDate.getDate() - 1);\n        const formattedStartDate = formatDate(startDate);\n        const formattedEndDate = formatDate(endDate);\n        console.log(`🔍 Buscando SoftSensors do Sensor ${sensorId}...`);\n        const response = await axios.get(`http://localhost:3001/get-softsensors?sensorId=${sensorId}&startDate=${formattedStartDate}&endDate=${formattedEndDate}&offset=${offset}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"✅ Resposta da API:\", response.data);\n        const newData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n        if (newData.length > 0) {\n          setSoftSensorData(prevData => [...prevData, ...newData]);\n          setOffset(prevOffset => prevOffset + 1);\n        } else {\n          setHasMoreData(false);\n        }\n      } catch (err) {\n        console.error(\"❌ Erro na requisição:\", err);\n        setError(\"Erro ao carregar SoftSensors.\");\n      } finally {\n        setLoading(false);\n        isFetching.current = false;\n      }\n    };\n    fetchSoftSensorData();\n  }, [sensorId, offset]);\n  const handleLoadMore = () => {\n    if (hasMoreData) {\n      setOffset(prevOffset => prevOffset + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"SoftSensors do Sensor \", sensorId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-list\",\n      children: softSensorData.length > 0 ? softSensorData.map((softSensor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 32\n          }, this), \" \", softSensor.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 32\n          }, this), \" \", softSensor.readingDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 32\n          }, this), \" \", softSensor.sensorValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum SoftSensor encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), hasMoreData && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: handleLoadMore,\n      children: \"Carregar Mais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(SoftSensorPageAtual, \"4wpnroEQrAivhKfM932eHBwDQiE=\", false, function () {\n  return [useParams];\n});\n_c = SoftSensorPageAtual;\nexport default SoftSensorPageAtual;\nvar _c;\n$RefreshReg$(_c, \"SoftSensorPageAtual\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useParams","jsxDEV","_jsxDEV","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","SoftSensorPageAtual","_s","sensorId","softSensorData","setSoftSensorData","loading","setLoading","error","setError","offset","setOffset","hasMoreData","setHasMoreData","isFetching","fetchSoftSensorData","current","_response$data","token","localStorage","getItem","endDate","Date","startDate","setDate","formattedStartDate","formattedEndDate","console","log","response","get","headers","Authorization","data","newData","length","prevData","prevOffset","err","handleLoadMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","softSensor","index","id","readingDate","sensorValue","onClick","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/src/pages/SoftSensorPageAtual.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/SoftSensorPageAtual.css\";\n\nconst formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n};\n\nconst SoftSensorPageAtual = () => {\n    const { sensorId } = useParams(); // ID do sensor principal\n    const [softSensorData, setSoftSensorData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [offset, setOffset] = useState(0);\n    const [hasMoreData, setHasMoreData] = useState(true);\n    const isFetching = useRef(false);\n\n    useEffect(() => {\n        const fetchSoftSensorData = async () => {\n            if (isFetching.current || !hasMoreData) return;\n            isFetching.current = true;\n\n            try {\n                const token = localStorage.getItem(\"token\");\n                const endDate = new Date();\n                const startDate = new Date(endDate);\n                startDate.setDate(endDate.getDate() - 1);\n\n                const formattedStartDate = formatDate(startDate);\n                const formattedEndDate = formatDate(endDate);\n\n                console.log(`🔍 Buscando SoftSensors do Sensor ${sensorId}...`);\n\n                const response = await axios.get(\n                    `http://localhost:3001/get-softsensors?sensorId=${sensorId}&startDate=${formattedStartDate}&endDate=${formattedEndDate}&offset=${offset}`,\n                    {\n                        headers: { Authorization: `Bearer ${token}` },\n                    }\n                );\n\n                console.log(\"✅ Resposta da API:\", response.data);\n\n                const newData = response.data?.data || [];\n\n                if (newData.length > 0) {\n                    setSoftSensorData((prevData) => [...prevData, ...newData]);\n                    setOffset((prevOffset) => prevOffset + 1);\n                } else {\n                    setHasMoreData(false);\n                }\n            } catch (err) {\n                console.error(\"❌ Erro na requisição:\", err);\n                setError(\"Erro ao carregar SoftSensors.\");\n            } finally {\n                setLoading(false);\n                isFetching.current = false;\n            }\n        };\n\n        fetchSoftSensorData();\n    }, [sensorId, offset]);\n\n    const handleLoadMore = () => {\n        if (hasMoreData) {\n            setOffset((prevOffset) => prevOffset + 1);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>SoftSensors do Sensor {sensorId}</h1>\n            {loading && <p>Carregando...</p>}\n            {error && <p>{error}</p>}\n\n            <div className=\"data-list\">\n                {softSensorData.length > 0 ? (\n                    softSensorData.map((softSensor, index) => (\n                        <div key={index} className=\"data-card\">\n                            <p><strong>ID:</strong> {softSensor.id}</p>\n                            <p><strong>Data:</strong> {softSensor.readingDate}</p>\n                            <p><strong>Valor:</strong> {softSensor.sensorValue}</p>\n                        </div>\n                    ))\n                ) : (\n                    !loading && <p>Nenhum SoftSensor encontrado.</p>\n                )}\n            </div>\n\n            {hasMoreData && (\n                <button className=\"btn-load-more\" onClick={handleLoadMore}>\n                    Carregar Mais\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default SoftSensorPageAtual;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}