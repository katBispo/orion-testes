{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/orion-front/src/pages/ListDevicesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport createApiInstance from \"../services/apiService\"; // Caminho correto para apiService.js\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListDevicesPage = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const api = createApiInstance(\"http://localhost:3001/\"); // URL do backend local\n        const response = await api.get(\"/list-all-devices\"); // Endpoint para listar dispositivos\n        console.log(response.data); // Para verificar os dados retornados no console\n        setDevices(response.data.body.data); // Ajuste conforme a estrutura de dados\n      } catch (err) {\n        console.error(\"Erro ao carregar dispositivos:\", err);\n        setError(\"Erro ao carregar dispositivos\");\n      }\n    };\n    fetchDevices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices && Object.keys(devices).map(deviceId => {\n        const device = devices[deviceId];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: device.deviceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", device.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Upload: \", device.lastUpload]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, device.deviceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ListDevicesPage, \"NVgw+OpXeSjnx9Qu19Fpp0Nm/b4=\");\n_c = ListDevicesPage;\nexport default ListDevicesPage;\nvar _c;\n$RefreshReg$(_c, \"ListDevicesPage\");","map":{"version":3,"names":["React","useEffect","useState","createApiInstance","toast","ToastContainer","jsxDEV","_jsxDEV","ListDevicesPage","_s","devices","setDevices","error","setError","fetchDevices","api","response","get","console","log","data","body","err","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","deviceId","device","deviceName","status","lastUpload","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/orion-front/src/pages/ListDevicesPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport createApiInstance from \"../services/apiService\";  // Caminho correto para apiService.js\nimport { toast, ToastContainer } from \"react-toastify\";\n \nconst ListDevicesPage = () => {\n  const [devices, setDevices] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const api = createApiInstance(\"http://localhost:3001/\"); // URL do backend local\n        const response = await api.get(\"/list-all-devices\"); // Endpoint para listar dispositivos\n        console.log(response.data); // Para verificar os dados retornados no console\n        setDevices(response.data.body.data); // Ajuste conforme a estrutura de dados\n      } catch (err) {\n        console.error(\"Erro ao carregar dispositivos:\", err);\n        setError(\"Erro ao carregar dispositivos\");\n      }\n    };\n\n    fetchDevices();\n  }, []);\n\n  return (\n    <div>\n      <h1>Lista de Dispositivos</h1>\n      {error && <p>{error}</p>}\n      <ul>\n        {devices && Object.keys(devices).map((deviceId) => {\n          const device = devices[deviceId];\n          return (\n            <li key={device.deviceId}>\n              <p>{device.deviceName}</p>\n              <p>Status: {device.status}</p>\n              <p>Last Upload: {device.lastUpload}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListDevicesPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,wBAAwB,CAAC,CAAE;AACzD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAGZ,iBAAiB,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACzD,MAAMa,QAAQ,GAAG,MAAMD,GAAG,CAACE,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAC5BT,UAAU,CAACK,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZJ,OAAO,CAACN,KAAK,CAAC,gCAAgC,EAAEU,GAAG,CAAC;QACpDT,QAAQ,CAAC,+BAA+B,CAAC;MAC3C;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7Bf,KAAK,iBAAIL,OAAA;MAAAgB,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,EACGb,OAAO,IAAIkB,MAAM,CAACC,IAAI,CAACnB,OAAO,CAAC,CAACoB,GAAG,CAAEC,QAAQ,IAAK;QACjD,MAAMC,MAAM,GAAGtB,OAAO,CAACqB,QAAQ,CAAC;QAChC,oBACExB,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAAgB,QAAA,EAAIS,MAAM,CAACC;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BpB,OAAA;YAAAgB,QAAA,GAAG,UAAQ,EAACS,MAAM,CAACE,MAAM;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BpB,OAAA;YAAAgB,QAAA,GAAG,eAAa,EAACS,MAAM,CAACG,UAAU;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHhCK,MAAM,CAACD,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIpB,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}