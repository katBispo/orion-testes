{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/orion-front/src/pages/ListDevicesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport createApiInstance from \"../services/apiService\"; // Caminho correto para apiService.js\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListDevicesPage = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchDevices = async () => {\n    try {\n      // Crie a instância do axios com a URL base\n      const api = createApiInstance(\"http://localhost:3001/\"); // Ajuste a URL, se necessário\n\n      // Faz a requisição para pegar a lista de dispositivos\n      const response = await api.get(\"/list-all-devices\"); // O endpoint correto para listar dispositivos\n      setDevices(response.data);\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Erro ao carregar os dispositivos\");\n      console.error(\"Erro ao carregar dispositivos:\", error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []); // Apenas carrega quando o componente é montado\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: device.name\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) // Ajuste conforme sua estrutura de dados\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ListDevicesPage, \"KRzw7oiRon1mstkQCUut2kMFv5c=\");\n_c = ListDevicesPage;\nexport default ListDevicesPage;\nvar _c;\n$RefreshReg$(_c, \"ListDevicesPage\");","map":{"version":3,"names":["React","useEffect","useState","createApiInstance","toast","ToastContainer","jsxDEV","_jsxDEV","ListDevicesPage","_s","devices","setDevices","loading","setLoading","fetchDevices","api","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","device","name","id","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/orion-front/src/pages/ListDevicesPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport createApiInstance from \"../services/apiService\";  // Caminho correto para apiService.js\nimport { toast, ToastContainer } from \"react-toastify\";\nconst ListDevicesPage = () => {\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchDevices = async () => {\n    try {\n      // Crie a instância do axios com a URL base\n      const api = createApiInstance(\"http://localhost:3001/\"); // Ajuste a URL, se necessário\n\n      // Faz a requisição para pegar a lista de dispositivos\n      const response = await api.get(\"/list-all-devices\"); // O endpoint correto para listar dispositivos\n      setDevices(response.data);\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Erro ao carregar os dispositivos\");\n      console.error(\"Erro ao carregar dispositivos:\", error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n  }, []); // Apenas carrega quando o componente é montado\n\n  return (\n    <div>\n      <h2>Lista de Dispositivos</h2>\n      {loading ? (\n        <p>Carregando...</p>\n      ) : (\n        <ul>\n          {devices.map((device) => (\n            <li key={device.id}>{device.name}</li> // Ajuste conforme sua estrutura de dados\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ListDevicesPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,wBAAwB,CAAC,CAAE;AACzD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,GAAG,GAAGZ,iBAAiB,CAAC,wBAAwB,CAAC,CAAC,CAAC;;MAEzD;MACA,MAAMa,QAAQ,GAAG,MAAMD,GAAG,CAACE,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;MACrDN,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC;MACzBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdf,KAAK,CAACe,KAAK,CAAC,kCAAkC,CAAC;MAC/CC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7Bb,OAAO,gBACNL,OAAA;MAAAc,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEpBlB,OAAA;MAAAc,QAAA,EACGX,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAClBpB,OAAA;QAAAc,QAAA,EAAqBM,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,CAAC;MACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtCID,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}