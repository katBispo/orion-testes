{"ast":null,"code":"var _jsxFileName = \"/home/kauan/CU/orion_teste/src/pages/ListRainfall.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListRainfall = () => {\n  _s();\n  const {\n    serialNumber\n  } = useParams(); // Pega o serialNumber da URL\n  const [rainfallData, setRainfallData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  useEffect(() => {\n    const fetchRainfallData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/get-by-serialNumber/${serialNumber}/rainfall`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Dados de rainfall:\", response.data);\n        if (response.data && response.data.body) {\n          setRainfallData(response.data.body);\n        } else {\n          setError(\"Nenhum dado de rainfall encontrado.\");\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(\"Erro ao carregar dados de rainfall.\");\n        setLoading(false);\n        console.error(\"Erro na requisição:\", error);\n      }\n    };\n    fetchRainfallData();\n  }, [serialNumber, token]); // Recarrega a requisição sempre que o serialNumber mudar\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rainfall-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Dados de Rainfall do Sensor \", serialNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando dados de rainfall...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rainfallData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rainfallData.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sensor ID: \", sensor.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Valor: \", sensor.value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\xDAltima atualiza\\xE7\\xE3o: \", new Date(sensor.lastUpdate).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum dado de rainfall encontrado para este dispositivo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(ListRainfall, \"CBNjrXTsOp3nMD1yhqklCjZ6TZQ=\", false, function () {\n  return [useParams];\n});\n_c = ListRainfall;\nexport default ListRainfall;\nvar _c;\n$RefreshReg$(_c, \"ListRainfall\");","map":{"version":3,"names":["useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ListRainfall","_s","serialNumber","rainfallData","setRainfallData","loading","setLoading","error","setError","token","localStorage","getItem","fetchRainfallData","response","get","headers","Authorization","console","log","data","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","sensor","index","id","value","Date","lastUpdate","toLocaleString","_c","$RefreshReg$"],"sources":["/home/kauan/CU/orion_teste/src/pages/ListRainfall.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nconst ListRainfall = () => {\n    const { serialNumber } = useParams(); // Pega o serialNumber da URL\n    const [rainfallData, setRainfallData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  \n    useEffect(() => {\n      const fetchRainfallData = async () => {\n        try {\n          const response = await axios.get(\n            `http://localhost:3001/get-by-serialNumber/${serialNumber}/rainfall`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          );\n  \n          console.log(\"Dados de rainfall:\", response.data);\n  \n          if (response.data && response.data.body) {\n            setRainfallData(response.data.body);\n          } else {\n            setError(\"Nenhum dado de rainfall encontrado.\");\n          }\n  \n          setLoading(false);\n        } catch (error) {\n          setError(\"Erro ao carregar dados de rainfall.\");\n          setLoading(false);\n          console.error(\"Erro na requisição:\", error);\n        }\n      };\n  \n      fetchRainfallData();\n    }, [serialNumber, token]); // Recarrega a requisição sempre que o serialNumber mudar\n  \n    return (\n      <div className=\"rainfall-container\">\n        <h2>Dados de Rainfall do Sensor {serialNumber}</h2>\n        {loading ? (\n          <p>Carregando dados de rainfall...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <div>\n            {rainfallData.length > 0 ? (\n              <ul>\n                {rainfallData.map((sensor, index) => (\n                  <li key={index}>\n                    <p>Sensor ID: {sensor.id}</p>\n                    <p>Valor: {sensor.value}</p>\n                    <p>Última atualização: {new Date(sensor.lastUpdate).toLocaleString()}</p>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>Nenhum dado de rainfall encontrado para este dispositivo.</p>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  export default ListRainfall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}