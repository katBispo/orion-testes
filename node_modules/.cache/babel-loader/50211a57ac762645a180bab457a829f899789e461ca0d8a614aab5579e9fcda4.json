{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"./authService\";\n\n// Função para criar uma instância do axios com a URL base configurável\nconst createApiInstance = (baseURL = \"http://localhost:3000/api\") => {\n  const api = axios.create({\n    baseURL: baseURL // URL dinâmica\n  });\n\n  // Intercepta todas as requisições e adiciona o token no cabeçalho\n  api.interceptors.request.use(config => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => Promise.reject(error));\n  return api;\n};\nexport default createApiInstance;","map":{"version":3,"names":["axios","getToken","createApiInstance","baseURL","api","create","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject"],"sources":["/home/kauan/CU/orion_teste/orion-front/src/services/apiService.js"],"sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"./authService\";\n\n// Função para criar uma instância do axios com a URL base configurável\nconst createApiInstance = (baseURL = \"http://localhost:3000/api\") => {\n  const api = axios.create({\n    baseURL: baseURL,  // URL dinâmica\n  });\n\n  // Intercepta todas as requisições e adiciona o token no cabeçalho\n  api.interceptors.request.use(\n    (config) => {\n      const token = getToken();\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    },\n    (error) => Promise.reject(error)\n  );\n\n  return api;\n};\n\nexport default createApiInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,eAAe;;AAExC;AACA,MAAMC,iBAAiB,GAAGA,CAACC,OAAO,GAAG,2BAA2B,KAAK;EACnE,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;IACvBF,OAAO,EAAEA,OAAO,CAAG;EACrB,CAAC,CAAC;;EAEF;EACAC,GAAG,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACV,MAAMC,KAAK,GAAGT,QAAQ,CAAC,CAAC;IACxB,IAAIS,KAAK,EAAE;MACTD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;IAClD;IACA,OAAOD,MAAM;EACf,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;EAED,OAAOT,GAAG;AACZ,CAAC;AAED,eAAeF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}